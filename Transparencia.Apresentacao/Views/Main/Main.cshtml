@model ProjetoTransparencia.Apresentacao.Models.MainViewModel


@{
	ViewData["Title"] = "Main";
}

<meta charset="utf-8" />
<script src="~/javascript/jquery-3.4.1.min.js"></script>
<script src="~/javascript/bootstrap.min.js"></script>
<script src="~/javascript/jquery.growl.js" type="text/javascript"></script>
<script src="~/javascript/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="~/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/TransparenciaEstilo.css" />
<link rel="stylesheet" href="~/css/jquery.growl.css" />
<link rel="stylesheet" href="~/css/jquery.dataTables.min.css" />

<body class="content">
	<div class="container">
		<div class="tab-content">
			<div class="tab-pane active" id="Dashboard">
				<div class="row">
					<h3><span>Últimos Documentos</span></h3>
					<div class="col-12" style="overflow:auto;height:500px">
						<table class="table table-hover" style="margin-top:4%">
							<thead>
								<tr>
									<th style="width:50px" scope="col">Identificação</th>
									<th style="width:50px" scope="col">Nome do Documento</th>
									<th scope="col">Inclusão</th>
									<th style="width:50px" scope="col">Nível de Permisão</th>
									<th style="width:50px" scope="col">Categoria</th>
									<th style="width:50px" scope="col">Nome do Usuario que cadastrou</th>
									<th scope="col"></th>
									<th scope="col"></th>
								</tr>
							</thead>


							@for (int i = 0; i < Model.ObjDocumentos.Count(); i++)
							{

								<tbody>
									<tr class="table-info">
										<td>@Html.LabelFor(x => x.ObjDocumentos[i].Id)</td>
										<td>@Model.ObjDocumentos[i].NomeDocumento</td>
										<td>@Model.ObjDocumentos[i].DtInclusao</td>
										<td>@Html.DropDownListFor(x => x.ObjDocumentos[i].NivelPermissao, new SelectList(Model.ObjPermissoes, "Id", "NivelPermissao"), "Selecione", new { @class = "form-control",@disabled="disabled" })</td>
										<td>@Html.DropDownListFor(x => x.ObjDocumentos[i].IdTipoDocumentos, new SelectList(Model.ObjTipos, "Id", "Tipo"), "Selecione", new { @class = "form-control",@disabled="disabled" })</td>
										<td>@Model.ObjDocumentos[i].NomeUsuario</td>
										<td><input type="button" class="btn btn-primary" style="width:100%" value="Excluir" onclick="location.href='@Url.Action("Excluir", "Main", new { id = Model.ObjDocumentos[i].Id })'" /></td>
										<td><input type="button" class="btn btn-primary" style="width:100%" value="Download" onclick="downloadFile(@Model.ObjDocumentos[i].Id)" /></td>
									</tr>
								</tbody>
							}
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>


	@using (Html.BeginForm("Requisitar", "Main", FormMethod.Post))
	{

		<div class="modal fade" id="ExemploModalCentralizado" tabindex="-1" role="dialog" aria-labelledby="TituloModalCentralizado" aria-hidden="true">
			<div class="modal-dialog modal-dialog-centered" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="TituloModalCentralizado">Requisição de Documento</h5>
						<button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<h1></h1>
						@Html.TextAreaFor(x => x.Requisicao.Mensagem)
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
						<button type="submit" class="btn btn-primary">Enviar Requisição</button>
						@Html.HiddenFor(x => x.Requisicao.Id,new {@id="IdDocumento"})
					</div>
				</div>
			</div>
		</div>
	}


	<script>
		function downloadFile(idFile) {

			let Informacao = { id: idFile }

			$.ajax({
				url: "/Main/DowloadFile",
				type: "POST",
				contentType: "application/json",
				data: JSON.stringify(Informacao),
				success: function (response) {
					debugger
					if ($.isNumeric(response)) {
						$.growl.warning({ message: "Sem Permissao Para Acessar!!" });

					    $('#idDocumento').val(response)
						$('#ExemploModalCentralizado').modal('show')
					}
					else {
						var sampleArr = base64ToArrayBuffer(response.split('|')[1]);
						saveByteArray(response.split('|')[0], sampleArr, response.split('.')[1]);
					}
				},
				error: function () {
					alert("Erro ao processar requisicao");
				}
			});
		}

		function saveByteArray(reportName, byte, extensao) {
			var blob = new Blob([byte], { type: "application/" + extensao });
			var link = document.createElement('a');
			link.href = window.URL.createObjectURL(blob);
			var fileName = reportName;
			link.download = fileName;
			link.click();
		};

		function base64ToArrayBuffer(base64) {
			var binaryString = window.atob(base64);
			var binaryLen = binaryString.length;
			var bytes = new Uint8Array(binaryLen);
			for (var i = 0; i < binaryLen; i++) {
				var ascii = binaryString.charCodeAt(i);
				bytes[i] = ascii;
			}
			return bytes;
		}
	</script>
</body>


